SurgeNode.prototype=new Node;SurgeNode.prototype.constructor=SurgeNode;SurgeNode.prototype.parent=Node.prototype;SurgeNode.authoringToolName="Surge";SurgeNode.authoringToolDescription="This is a generic step only used by developers";function SurgeNode(a,b){this.view=b;this.type=a;this.prevWorkNodeIds=[]}SurgeNode.prototype.parseDataJSONObj=function(a){return SurgeState.prototype.parseDataJSONObj(a)};SurgeNode.prototype.translateStudentWork=function(a){return a};
SurgeNode.prototype.onExit=function(){this.contentPanel&&this.contentPanel.save&&this.contentPanel.save()};SurgeNode.prototype.renderGradingView=function(a,b){var c=b.getLatestWork().getStudentWork();$("#"+a).html(c.response)};SurgeNode.prototype.getHTMLContentTemplate=function(){return createContent("node/surge/surge.html")};NodeFactory.addNode("SurgeNode",SurgeNode);typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/node/surge/SurgeNode.js");View.prototype.surgeDispatcher=function(a,b,c){a=="surgeUpdatePrompt"?c.SurgeNode.updatePrompt():a=="surgeUpdatedSwfUrlInput"?c.SurgeNode.updateSwfUrl():a=="surgeUpdateLevelString"&&c.SurgeNode.updateLevelString(b)};for(var events=["surgeUpdatePrompt","surgeUpdatedSwfUrlInput","surgeUpdateLevelString"],x=0;x<events.length;x++)componentloader.addEvent(events[x],"surgeDispatcher");typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/node/surge/surgeEvents.js");
if(typeof eventManager != 'undefined'){eventManager.fire('scriptLoaded', 'vle/node/surge/surge_core_min.js');}
