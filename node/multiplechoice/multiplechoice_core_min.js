MultipleChoiceNode.prototype=new Node;MultipleChoiceNode.prototype.constructor=MultipleChoiceNode;MultipleChoiceNode.prototype.parent=Node.prototype;MultipleChoiceNode.authoringToolName="Multiple Choice";MultipleChoiceNode.authoringToolDescription="Students answer a multiple choice question";function MultipleChoiceNode(a,b){this.view=b;this.type=a;this.mc=null;this.audioSupported=!0;this.prevWorkNodeIds=[]}MultipleChoiceNode.prototype.parseDataJSONObj=function(a){return MCSTATE.prototype.parseDataJSONObj(a)};
MultipleChoiceNode.prototype.getLatestWork=function(a){var b=null;this.mc=new MC(loadXMLString(this.element.getElementsByTagName("jaxbXML")[0].firstChild.nodeValue));this.mc.loadForTicker(this,a);b=this.mc.getLatestState(this.id);return b==null?null:new MultipleChoiceQueryEntry(a.getWorkgroupId(),a.getUserName(),this.id,this.mc.promptText,b.getIdentifier(),this.mc.getCHOICEByIdentifier(b.getIdentifier()).text)};
MultipleChoiceNode.prototype.getPrompt=function(){var a="";if(b!=null){var b=this.content.getContentJSON();if(b!=null&&b.assessmentItem!=null)a=b.assessmentItem.interaction.prompt}return a};MultipleChoiceNode.prototype.makeQueryContainer=function(a){this.mc=new MC(loadXMLString(this.element.getElementsByTagName("jaxbXML")[0].firstChild.nodeValue));this.mc.loadForTicker(this,a);return new MultipleChoiceQueryContainer(this.id,this.mc.promptText,this.mc.choiceToValueArray)};
MultipleChoiceNode.prototype.translateStudentWork=function(a){return a};MultipleChoiceNode.prototype.onExit=function(){};MultipleChoiceNode.prototype.getHTMLContentTemplate=function(){return createContent("node/multiplechoice/multiplechoice.html")};NodeFactory.addNode("MultipleChoiceNode",MultipleChoiceNode);typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/node/multiplechoice/MultipleChoiceNode.js");ChallengeNode.prototype=new MultipleChoiceNode;ChallengeNode.prototype.constructor=ChallengeNode;ChallengeNode.prototype.parent=MultipleChoiceNode.prototype;ChallengeNode.authoringToolName="Challenge Question";ChallengeNode.authoringToolDescription="Students answer a multiple choice question. If they get the answer wrong, they will need to revisit a previous step before trying again.";function ChallengeNode(a,b){this.view=b;this.type=a;this.prevWorkNodeIds=[]}NodeFactory.addNode("ChallengeNode",ChallengeNode);
typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/node/multiplechoice/ChallengeNode.js");View.prototype.multiplechoiceDispatcher=function(a,b,c){a=="mcCreateNewChoice"?c.MultipleChoiceNode.createNewChoice():a=="mcClearCorrectChoice"?c.MultipleChoiceNode.clearCorrectChoice():a=="mcShuffleChange"?c.MultipleChoiceNode.shuffleChange(b[0]):a=="mcFeedbackOptionChange"?c.MultipleChoiceNode.feedbackOptionChange(b[0]):a=="mcNumChoiceChanged"?c.MultipleChoiceNode.numChoiceChanged():a=="mcXmlUpdated"?c.MultipleChoiceNode.updatePrompt():a=="mcCorrectChoiceChange"?c.MultipleChoiceNode.correctChoiceChange(b[0]):
a=="mcRemoveChoice"?c.MultipleChoiceNode.removeChoice(b[0]):a=="challengeNavigateToChanged"?c.MultipleChoiceNode.challengeNavigateToChanged():a=="challengeAddNew"?c.MultipleChoiceNode.addNewAttemptScore():a=="challengeRemoveLast"?c.MultipleChoiceNode.removeLastAttemptScore():a=="challengeScoreChanged"?c.MultipleChoiceNode.scoreChanged(b[0]):a=="branchCreateNewBranch"?c.MultipleChoiceNode.createNewBranch():a=="branchRemoveBranch"?c.MultipleChoiceNode.removeBranch(b[0]):a=="branchRemoveChoice"?c.MultipleChoiceNode.removeChoice(b[0],
b[1]):a=="branchAssociateAnswer"?c.MultipleChoiceNode.associateAnswer(b[0]):a=="branchRemoveNode"?c.MultipleChoiceNode.removeNode(b[0],b[1]):a=="branchAssociateNode"?c.MultipleChoiceNode.associateNode(b[0]):a=="branchSelectAssociateAnswer"?c.MultipleChoiceNode.selectedAssociateAnswer(b[0]):a=="branchSelectAssociateNode"&&c.MultipleChoiceNode.selectedAssociateNode(b[0])};
for(var events=["mcCreateNewChoice","mcClearCorrectChoice","mcShuffleChange","mcFeedbackOptionChange","mcNumChoiceChanged","mcXmlUpdated","mcCorrectChoiceChange","mcRemoveChoice","challengeNavigateToChanged","challengeAddNew","challengeRemoveLast","challengeScoreChanged","branchCreateNewBranch","branchRemoveBranch","branchRemoveChoice","branchAssociateAnswer","branchRemoveNode","branchAssociateNode","branchSelectAssociateAnswer","branchSelectAssociateNode"],x=0;x<events.length;x++)componentloader.addEvent(events[x],
"multiplechoiceDispatcher");typeof eventManager!="undefined"&&eventManager.fire("scriptLoaded","vle/node/multiplechoice/multipleChoiceEvents.js");
if(typeof eventManager != 'undefined'){eventManager.fire('scriptLoaded', 'vle/node/multiplechoice/multiplechoice_core_min.js');}
